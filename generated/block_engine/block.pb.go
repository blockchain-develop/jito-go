// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: block.proto

package jito_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	"github.com/blockchain-develop/jito-go/utils"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Condensed block helpful for getting data around efficiently internal to our system.
type CondensedBlock struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Header                *utils.Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	PreviousBlockhash     string                 `protobuf:"bytes,2,opt,name=previous_blockhash,json=previousBlockhash,proto3" json:"previous_blockhash,omitempty"`
	Blockhash             string                 `protobuf:"bytes,3,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	ParentSlot            uint64                 `protobuf:"varint,4,opt,name=parent_slot,json=parentSlot,proto3" json:"parent_slot,omitempty"`
	VersionedTransactions [][]byte               `protobuf:"bytes,5,rep,name=versioned_transactions,json=versionedTransactions,proto3" json:"versioned_transactions,omitempty"`
	Slot                  uint64                 `protobuf:"varint,6,opt,name=slot,proto3" json:"slot,omitempty"`
	Commitment            string                 `protobuf:"bytes,7,opt,name=commitment,proto3" json:"commitment,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CondensedBlock) Reset() {
	*x = CondensedBlock{}
	mi := &file_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CondensedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CondensedBlock) ProtoMessage() {}

func (x *CondensedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CondensedBlock.ProtoReflect.Descriptor instead.
func (*CondensedBlock) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *CondensedBlock) GetHeader() *utils.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CondensedBlock) GetPreviousBlockhash() string {
	if x != nil {
		return x.PreviousBlockhash
	}
	return ""
}

func (x *CondensedBlock) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *CondensedBlock) GetParentSlot() uint64 {
	if x != nil {
		return x.ParentSlot
	}
	return 0
}

func (x *CondensedBlock) GetVersionedTransactions() [][]byte {
	if x != nil {
		return x.VersionedTransactions
	}
	return nil
}

func (x *CondensedBlock) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *CondensedBlock) GetCommitment() string {
	if x != nil {
		return x.Commitment
	}
	return ""
}

var File_block_proto protoreflect.FileDescriptor

const file_block_proto_rawDesc = "" +
	"\n" +
	"\vblock.proto\x12\x05block\x1a\fshared.proto\"\x91\x02\n" +
	"\x0eCondensedBlock\x12&\n" +
	"\x06header\x18\x01 \x01(\v2\x0e.shared.HeaderR\x06header\x12-\n" +
	"\x12previous_blockhash\x18\x02 \x01(\tR\x11previousBlockhash\x12\x1c\n" +
	"\tblockhash\x18\x03 \x01(\tR\tblockhash\x12\x1f\n" +
	"\vparent_slot\x18\x04 \x01(\x04R\n" +
	"parentSlot\x125\n" +
	"\x16versioned_transactions\x18\x05 \x03(\fR\x15versionedTransactions\x12\x12\n" +
	"\x04slot\x18\x06 \x01(\x04R\x04slot\x12\x1e\n" +
	"\n" +
	"commitment\x18\a \x01(\tR\n" +
	"commitmentb\x06proto3"

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData []byte
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_block_proto_rawDesc), len(file_block_proto_rawDesc)))
	})
	return file_block_proto_rawDescData
}

var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_block_proto_goTypes = []any{
	(*CondensedBlock)(nil), // 0: block.CondensedBlock
	(*utils.Header)(nil),         // 1: shared.Header
}
var file_block_proto_depIdxs = []int32{
	1, // 0: block.CondensedBlock.header:type_name -> shared.Header
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	utils.file_shared_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_block_proto_rawDesc), len(file_block_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}
