// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: block_engine.proto

package jito_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	"github.com/blockchain-develop/jito-go/utils"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribePacketsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribePacketsRequest) Reset() {
	*x = SubscribePacketsRequest{}
	mi := &file_block_engine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribePacketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePacketsRequest) ProtoMessage() {}

func (x *SubscribePacketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePacketsRequest.ProtoReflect.Descriptor instead.
func (*SubscribePacketsRequest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{0}
}

type SubscribePacketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *utils.Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Batch         *utils.PacketBatch           `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribePacketsResponse) Reset() {
	*x = SubscribePacketsResponse{}
	mi := &file_block_engine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribePacketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePacketsResponse) ProtoMessage() {}

func (x *SubscribePacketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePacketsResponse.ProtoReflect.Descriptor instead.
func (*SubscribePacketsResponse) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribePacketsResponse) GetHeader() *utils.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SubscribePacketsResponse) GetBatch() *utils.PacketBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type SubscribeBundlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeBundlesRequest) Reset() {
	*x = SubscribeBundlesRequest{}
	mi := &file_block_engine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeBundlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBundlesRequest) ProtoMessage() {}

func (x *SubscribeBundlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBundlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeBundlesRequest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{2}
}

type SubscribeBundlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bundles       []*utils.BundleUuid          `protobuf:"bytes,1,rep,name=bundles,proto3" json:"bundles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeBundlesResponse) Reset() {
	*x = SubscribeBundlesResponse{}
	mi := &file_block_engine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeBundlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBundlesResponse) ProtoMessage() {}

func (x *SubscribeBundlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBundlesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeBundlesResponse) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeBundlesResponse) GetBundles() []*utils.BundleUuid {
	if x != nil {
		return x.Bundles
	}
	return nil
}

type BlockBuilderFeeInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockBuilderFeeInfoRequest) Reset() {
	*x = BlockBuilderFeeInfoRequest{}
	mi := &file_block_engine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockBuilderFeeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockBuilderFeeInfoRequest) ProtoMessage() {}

func (x *BlockBuilderFeeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockBuilderFeeInfoRequest.ProtoReflect.Descriptor instead.
func (*BlockBuilderFeeInfoRequest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{4}
}

type BlockBuilderFeeInfoResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Pubkey string                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// commission (0-100)
	Commission    uint64 `protobuf:"varint,2,opt,name=commission,proto3" json:"commission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockBuilderFeeInfoResponse) Reset() {
	*x = BlockBuilderFeeInfoResponse{}
	mi := &file_block_engine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockBuilderFeeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockBuilderFeeInfoResponse) ProtoMessage() {}

func (x *BlockBuilderFeeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockBuilderFeeInfoResponse.ProtoReflect.Descriptor instead.
func (*BlockBuilderFeeInfoResponse) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{5}
}

func (x *BlockBuilderFeeInfoResponse) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *BlockBuilderFeeInfoResponse) GetCommission() uint64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

type AccountsOfInterest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// use * for all accounts
	Accounts      []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountsOfInterest) Reset() {
	*x = AccountsOfInterest{}
	mi := &file_block_engine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountsOfInterest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsOfInterest) ProtoMessage() {}

func (x *AccountsOfInterest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsOfInterest.ProtoReflect.Descriptor instead.
func (*AccountsOfInterest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{6}
}

func (x *AccountsOfInterest) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AccountsOfInterestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountsOfInterestRequest) Reset() {
	*x = AccountsOfInterestRequest{}
	mi := &file_block_engine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountsOfInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsOfInterestRequest) ProtoMessage() {}

func (x *AccountsOfInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsOfInterestRequest.ProtoReflect.Descriptor instead.
func (*AccountsOfInterestRequest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{7}
}

type AccountsOfInterestUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountsOfInterestUpdate) Reset() {
	*x = AccountsOfInterestUpdate{}
	mi := &file_block_engine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountsOfInterestUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsOfInterestUpdate) ProtoMessage() {}

func (x *AccountsOfInterestUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsOfInterestUpdate.ProtoReflect.Descriptor instead.
func (*AccountsOfInterestUpdate) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{8}
}

func (x *AccountsOfInterestUpdate) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type ProgramsOfInterestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgramsOfInterestRequest) Reset() {
	*x = ProgramsOfInterestRequest{}
	mi := &file_block_engine_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgramsOfInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramsOfInterestRequest) ProtoMessage() {}

func (x *ProgramsOfInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramsOfInterestRequest.ProtoReflect.Descriptor instead.
func (*ProgramsOfInterestRequest) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{9}
}

type ProgramsOfInterestUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Programs      []string               `protobuf:"bytes,1,rep,name=programs,proto3" json:"programs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgramsOfInterestUpdate) Reset() {
	*x = ProgramsOfInterestUpdate{}
	mi := &file_block_engine_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgramsOfInterestUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramsOfInterestUpdate) ProtoMessage() {}

func (x *ProgramsOfInterestUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramsOfInterestUpdate.ProtoReflect.Descriptor instead.
func (*ProgramsOfInterestUpdate) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{10}
}

func (x *ProgramsOfInterestUpdate) GetPrograms() []string {
	if x != nil {
		return x.Programs
	}
	return nil
}

// A series of packets with an expiration attached to them.
// The header contains a timestamp for when this packet was generated.
// The expiry is how long the packet batches have before they expire and are forwarded to the validator.
// This provides a more censorship resistant method to MEV than block engines receiving packets directly.
type ExpiringPacketBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *utils.Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Batch         *utils.PacketBatch           `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	ExpiryMs      uint32                 `protobuf:"varint,3,opt,name=expiry_ms,json=expiryMs,proto3" json:"expiry_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpiringPacketBatch) Reset() {
	*x = ExpiringPacketBatch{}
	mi := &file_block_engine_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpiringPacketBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpiringPacketBatch) ProtoMessage() {}

func (x *ExpiringPacketBatch) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpiringPacketBatch.ProtoReflect.Descriptor instead.
func (*ExpiringPacketBatch) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{11}
}

func (x *ExpiringPacketBatch) GetHeader() *utils.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ExpiringPacketBatch) GetBatch() *utils.PacketBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *ExpiringPacketBatch) GetExpiryMs() uint32 {
	if x != nil {
		return x.ExpiryMs
	}
	return 0
}

// Packets and heartbeats are sent over the same stream.
// ExpiringPacketBatches have an expiration attached to them so the block engine can track
// how long it has until the relayer forwards the packets to the validator.
// Heartbeats contain a timestamp from the system and is used as a simple and naive time-sync mechanism
// so the block engine has some idea on how far their clocks are apart.
type PacketBatchUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*PacketBatchUpdate_Batches
	//	*PacketBatchUpdate_Heartbeat
	Msg           isPacketBatchUpdate_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketBatchUpdate) Reset() {
	*x = PacketBatchUpdate{}
	mi := &file_block_engine_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketBatchUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketBatchUpdate) ProtoMessage() {}

func (x *PacketBatchUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketBatchUpdate.ProtoReflect.Descriptor instead.
func (*PacketBatchUpdate) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{12}
}

func (x *PacketBatchUpdate) GetMsg() isPacketBatchUpdate_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PacketBatchUpdate) GetBatches() *ExpiringPacketBatch {
	if x != nil {
		if x, ok := x.Msg.(*PacketBatchUpdate_Batches); ok {
			return x.Batches
		}
	}
	return nil
}

func (x *PacketBatchUpdate) GetHeartbeat() *utils.Heartbeat {
	if x != nil {
		if x, ok := x.Msg.(*PacketBatchUpdate_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

type isPacketBatchUpdate_Msg interface {
	isPacketBatchUpdate_Msg()
}

type PacketBatchUpdate_Batches struct {
	Batches *ExpiringPacketBatch `protobuf:"bytes,1,opt,name=batches,proto3,oneof"`
}

type PacketBatchUpdate_Heartbeat struct {
	Heartbeat *utils.Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

func (*PacketBatchUpdate_Batches) isPacketBatchUpdate_Msg() {}

func (*PacketBatchUpdate_Heartbeat) isPacketBatchUpdate_Msg() {}

type StartExpiringPacketStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Heartbeat     *utils.Heartbeat             `protobuf:"bytes,1,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartExpiringPacketStreamResponse) Reset() {
	*x = StartExpiringPacketStreamResponse{}
	mi := &file_block_engine_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartExpiringPacketStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExpiringPacketStreamResponse) ProtoMessage() {}

func (x *StartExpiringPacketStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_engine_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExpiringPacketStreamResponse.ProtoReflect.Descriptor instead.
func (*StartExpiringPacketStreamResponse) Descriptor() ([]byte, []int) {
	return file_block_engine_proto_rawDescGZIP(), []int{13}
}

func (x *StartExpiringPacketStreamResponse) GetHeartbeat() *utils.Heartbeat {
	if x != nil {
		return x.Heartbeat
	}
	return nil
}

var File_block_engine_proto protoreflect.FileDescriptor

const file_block_engine_proto_rawDesc = "" +
	"\n" +
	"\x12block_engine.proto\x12\fblock_engine\x1a\fpacket.proto\x1a\fshared.proto\x1a\fbundle.proto\"\x19\n" +
	"\x17SubscribePacketsRequest\"m\n" +
	"\x18SubscribePacketsResponse\x12&\n" +
	"\x06header\x18\x01 \x01(\v2\x0e.shared.HeaderR\x06header\x12)\n" +
	"\x05batch\x18\x02 \x01(\v2\x13.packet.PacketBatchR\x05batch\"\x19\n" +
	"\x17SubscribeBundlesRequest\"H\n" +
	"\x18SubscribeBundlesResponse\x12,\n" +
	"\abundles\x18\x01 \x03(\v2\x12.bundle.BundleUuidR\abundles\"\x1c\n" +
	"\x1aBlockBuilderFeeInfoRequest\"U\n" +
	"\x1bBlockBuilderFeeInfoResponse\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\tR\x06pubkey\x12\x1e\n" +
	"\n" +
	"commission\x18\x02 \x01(\x04R\n" +
	"commission\"0\n" +
	"\x12AccountsOfInterest\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\"\x1b\n" +
	"\x19AccountsOfInterestRequest\"6\n" +
	"\x18AccountsOfInterestUpdate\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\"\x1b\n" +
	"\x19ProgramsOfInterestRequest\"6\n" +
	"\x18ProgramsOfInterestUpdate\x12\x1a\n" +
	"\bprograms\x18\x01 \x03(\tR\bprograms\"\x85\x01\n" +
	"\x13ExpiringPacketBatch\x12&\n" +
	"\x06header\x18\x01 \x01(\v2\x0e.shared.HeaderR\x06header\x12)\n" +
	"\x05batch\x18\x02 \x01(\v2\x13.packet.PacketBatchR\x05batch\x12\x1b\n" +
	"\texpiry_ms\x18\x03 \x01(\rR\bexpiryMs\"\x8c\x01\n" +
	"\x11PacketBatchUpdate\x12=\n" +
	"\abatches\x18\x01 \x01(\v2!.block_engine.ExpiringPacketBatchH\x00R\abatches\x121\n" +
	"\theartbeat\x18\x02 \x01(\v2\x11.shared.HeartbeatH\x00R\theartbeatB\x05\n" +
	"\x03msg\"T\n" +
	"!StartExpiringPacketStreamResponse\x12/\n" +
	"\theartbeat\x18\x01 \x01(\v2\x11.shared.HeartbeatR\theartbeat2\xd5\x02\n" +
	"\x14BlockEngineValidator\x12e\n" +
	"\x10SubscribePackets\x12%.block_engine.SubscribePacketsRequest\x1a&.block_engine.SubscribePacketsResponse\"\x000\x01\x12e\n" +
	"\x10SubscribeBundles\x12%.block_engine.SubscribeBundlesRequest\x1a&.block_engine.SubscribeBundlesResponse\"\x000\x01\x12o\n" +
	"\x16GetBlockBuilderFeeInfo\x12(.block_engine.BlockBuilderFeeInfoRequest\x1a).block_engine.BlockBuilderFeeInfoResponse\"\x002\xf1\x02\n" +
	"\x12BlockEngineRelayer\x12r\n" +
	"\x1bSubscribeAccountsOfInterest\x12'.block_engine.AccountsOfInterestRequest\x1a&.block_engine.AccountsOfInterestUpdate\"\x000\x01\x12r\n" +
	"\x1bSubscribeProgramsOfInterest\x12'.block_engine.ProgramsOfInterestRequest\x1a&.block_engine.ProgramsOfInterestUpdate\"\x000\x01\x12s\n" +
	"\x19StartExpiringPacketStream\x12\x1f.block_engine.PacketBatchUpdate\x1a/.block_engine.StartExpiringPacketStreamResponse\"\x00(\x010\x01b\x06proto3"

var (
	file_block_engine_proto_rawDescOnce sync.Once
	file_block_engine_proto_rawDescData []byte
)

func file_block_engine_proto_rawDescGZIP() []byte {
	file_block_engine_proto_rawDescOnce.Do(func() {
		file_block_engine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_block_engine_proto_rawDesc), len(file_block_engine_proto_rawDesc)))
	})
	return file_block_engine_proto_rawDescData
}

var file_block_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_block_engine_proto_goTypes = []any{
	(*SubscribePacketsRequest)(nil),           // 0: block_engine.SubscribePacketsRequest
	(*SubscribePacketsResponse)(nil),          // 1: block_engine.SubscribePacketsResponse
	(*SubscribeBundlesRequest)(nil),           // 2: block_engine.SubscribeBundlesRequest
	(*SubscribeBundlesResponse)(nil),          // 3: block_engine.SubscribeBundlesResponse
	(*BlockBuilderFeeInfoRequest)(nil),        // 4: block_engine.BlockBuilderFeeInfoRequest
	(*BlockBuilderFeeInfoResponse)(nil),       // 5: block_engine.BlockBuilderFeeInfoResponse
	(*AccountsOfInterest)(nil),                // 6: block_engine.AccountsOfInterest
	(*AccountsOfInterestRequest)(nil),         // 7: block_engine.AccountsOfInterestRequest
	(*AccountsOfInterestUpdate)(nil),          // 8: block_engine.AccountsOfInterestUpdate
	(*ProgramsOfInterestRequest)(nil),         // 9: block_engine.ProgramsOfInterestRequest
	(*ProgramsOfInterestUpdate)(nil),          // 10: block_engine.ProgramsOfInterestUpdate
	(*ExpiringPacketBatch)(nil),               // 11: block_engine.ExpiringPacketBatch
	(*PacketBatchUpdate)(nil),                 // 12: block_engine.PacketBatchUpdate
	(*StartExpiringPacketStreamResponse)(nil), // 13: block_engine.StartExpiringPacketStreamResponse
	(*utils.Header)(nil),                            // 14: shared.Header
	(*utils.PacketBatch)(nil),                       // 15: packet.PacketBatch
	(*utils.BundleUuid)(nil),                        // 16: bundle.BundleUuid
	(*utils.Heartbeat)(nil),                         // 17: shared.Heartbeat
}
var file_block_engine_proto_depIdxs = []int32{
	14, // 0: block_engine.SubscribePacketsResponse.header:type_name -> shared.Header
	15, // 1: block_engine.SubscribePacketsResponse.batch:type_name -> packet.PacketBatch
	16, // 2: block_engine.SubscribeBundlesResponse.bundles:type_name -> bundle.BundleUuid
	14, // 3: block_engine.ExpiringPacketBatch.header:type_name -> shared.Header
	15, // 4: block_engine.ExpiringPacketBatch.batch:type_name -> packet.PacketBatch
	11, // 5: block_engine.PacketBatchUpdate.batches:type_name -> block_engine.ExpiringPacketBatch
	17, // 6: block_engine.PacketBatchUpdate.heartbeat:type_name -> shared.Heartbeat
	17, // 7: block_engine.StartExpiringPacketStreamResponse.heartbeat:type_name -> shared.Heartbeat
	0,  // 8: block_engine.BlockEngineValidator.SubscribePackets:input_type -> block_engine.SubscribePacketsRequest
	2,  // 9: block_engine.BlockEngineValidator.SubscribeBundles:input_type -> block_engine.SubscribeBundlesRequest
	4,  // 10: block_engine.BlockEngineValidator.GetBlockBuilderFeeInfo:input_type -> block_engine.BlockBuilderFeeInfoRequest
	7,  // 11: block_engine.BlockEngineRelayer.SubscribeAccountsOfInterest:input_type -> block_engine.AccountsOfInterestRequest
	9,  // 12: block_engine.BlockEngineRelayer.SubscribeProgramsOfInterest:input_type -> block_engine.ProgramsOfInterestRequest
	12, // 13: block_engine.BlockEngineRelayer.StartExpiringPacketStream:input_type -> block_engine.PacketBatchUpdate
	1,  // 14: block_engine.BlockEngineValidator.SubscribePackets:output_type -> block_engine.SubscribePacketsResponse
	3,  // 15: block_engine.BlockEngineValidator.SubscribeBundles:output_type -> block_engine.SubscribeBundlesResponse
	5,  // 16: block_engine.BlockEngineValidator.GetBlockBuilderFeeInfo:output_type -> block_engine.BlockBuilderFeeInfoResponse
	8,  // 17: block_engine.BlockEngineRelayer.SubscribeAccountsOfInterest:output_type -> block_engine.AccountsOfInterestUpdate
	10, // 18: block_engine.BlockEngineRelayer.SubscribeProgramsOfInterest:output_type -> block_engine.ProgramsOfInterestUpdate
	13, // 19: block_engine.BlockEngineRelayer.StartExpiringPacketStream:output_type -> block_engine.StartExpiringPacketStreamResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_block_engine_proto_init() }
func file_block_engine_proto_init() {
	if File_block_engine_proto != nil {
		return
	}
	utils.file_packet_proto_init()
	utils.file_shared_proto_init()
	utils.file_bundle_proto_init()
	file_block_engine_proto_msgTypes[12].OneofWrappers = []any{
		(*PacketBatchUpdate_Batches)(nil),
		(*PacketBatchUpdate_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_block_engine_proto_rawDesc), len(file_block_engine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_block_engine_proto_goTypes,
		DependencyIndexes: file_block_engine_proto_depIdxs,
		MessageInfos:      file_block_engine_proto_msgTypes,
	}.Build()
	File_block_engine_proto = out.File
	file_block_engine_proto_goTypes = nil
	file_block_engine_proto_depIdxs = nil
}
