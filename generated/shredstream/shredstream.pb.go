// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: shredstream.proto

package jito_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	"github.com/blockchain-develop/jito-go/utils"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Heartbeat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// don't trust IP:PORT from tcp header since it can be tampered over the wire
	// `socket.ip` must match incoming packet's ip. this prevents spamming an unwitting destination
	Socket *Socket `protobuf:"bytes,1,opt,name=socket,proto3" json:"socket,omitempty"`
	// regions for shredstream proxy to receive shreds from
	// list of valid regions: https://docs.jito.wtf/lowlatencytxnsend/#api
	Regions       []string `protobuf:"bytes,2,rep,name=regions,proto3" json:"regions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_shredstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_shredstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_shredstream_proto_rawDescGZIP(), []int{0}
}

func (x *Heartbeat) GetSocket() *Socket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *Heartbeat) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type HeartbeatResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// client must respond within `ttl_ms` to keep stream alive
	TtlMs         uint32 `protobuf:"varint,1,opt,name=ttl_ms,json=ttlMs,proto3" json:"ttl_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_shredstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shredstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_shredstream_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatResponse) GetTtlMs() uint32 {
	if x != nil {
		return x.TtlMs
	}
	return 0
}

type TraceShred struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// source region, one of: https://docs.jito.wtf/lowlatencytxnsend/#api
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// timestamp of creation
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// monotonically increases, resets upon service restart
	SeqNum        uint32 `protobuf:"varint,3,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraceShred) Reset() {
	*x = TraceShred{}
	mi := &file_shredstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceShred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceShred) ProtoMessage() {}

func (x *TraceShred) ProtoReflect() protoreflect.Message {
	mi := &file_shredstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceShred.ProtoReflect.Descriptor instead.
func (*TraceShred) Descriptor() ([]byte, []int) {
	return file_shredstream_proto_rawDescGZIP(), []int{2}
}

func (x *TraceShred) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TraceShred) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TraceShred) GetSeqNum() uint32 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

type SubscribeEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeEntriesRequest) Reset() {
	*x = SubscribeEntriesRequest{}
	mi := &file_shredstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntriesRequest) ProtoMessage() {}

func (x *SubscribeEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shredstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntriesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEntriesRequest) Descriptor() ([]byte, []int) {
	return file_shredstream_proto_rawDescGZIP(), []int{3}
}

type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the slot that the entry is from
	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Serialized bytes of Vec<Entry>: https://docs.rs/solana-entry/latest/solana_entry/entry/struct.Entry.html
	Entries       []byte `protobuf:"bytes,2,opt,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_shredstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_shredstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_shredstream_proto_rawDescGZIP(), []int{4}
}

func (x *Entry) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Entry) GetEntries() []byte {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_shredstream_proto protoreflect.FileDescriptor

const file_shredstream_proto_rawDesc = "" +
	"\n" +
	"\x11shredstream.proto\x12\vshredstream\x1a\fshared.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"M\n" +
	"\tHeartbeat\x12&\n" +
	"\x06socket\x18\x01 \x01(\v2\x0e.shared.SocketR\x06socket\x12\x18\n" +
	"\aregions\x18\x02 \x03(\tR\aregions\"*\n" +
	"\x11HeartbeatResponse\x12\x15\n" +
	"\x06ttl_ms\x18\x01 \x01(\rR\x05ttlMs\"x\n" +
	"\n" +
	"TraceShred\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x17\n" +
	"\aseq_num\x18\x03 \x01(\rR\x06seqNum\"\x19\n" +
	"\x17SubscribeEntriesRequest\"5\n" +
	"\x05Entry\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x18\n" +
	"\aentries\x18\x02 \x01(\fR\aentries2X\n" +
	"\vShredstream\x12I\n" +
	"\rSendHeartbeat\x12\x16.shredstream.Heartbeat\x1a\x1e.shredstream.HeartbeatResponse\"\x002b\n" +
	"\x10ShredstreamProxy\x12N\n" +
	"\x10SubscribeEntries\x12$.shredstream.SubscribeEntriesRequest\x1a\x12.shredstream.Entry0\x01b\x06proto3"

var (
	file_shredstream_proto_rawDescOnce sync.Once
	file_shredstream_proto_rawDescData []byte
)

func file_shredstream_proto_rawDescGZIP() []byte {
	file_shredstream_proto_rawDescOnce.Do(func() {
		file_shredstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shredstream_proto_rawDesc), len(file_shredstream_proto_rawDesc)))
	})
	return file_shredstream_proto_rawDescData
}

var file_shredstream_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_shredstream_proto_goTypes = []any{
	(*Heartbeat)(nil),               // 0: shredstream.Heartbeat
	(*HeartbeatResponse)(nil),       // 1: shredstream.HeartbeatResponse
	(*TraceShred)(nil),              // 2: shredstream.TraceShred
	(*SubscribeEntriesRequest)(nil), // 3: shredstream.SubscribeEntriesRequest
	(*Entry)(nil),                   // 4: shredstream.Entry
	(*Socket)(nil),                  // 5: shared.Socket
	(*timestamppb.Timestamp)(nil),   // 6: google.protobuf.Timestamp
}
var file_shredstream_proto_depIdxs = []int32{
	5, // 0: shredstream.Heartbeat.socket:type_name -> shared.Socket
	6, // 1: shredstream.TraceShred.created_at:type_name -> google.protobuf.Timestamp
	0, // 2: shredstream.Shredstream.SendHeartbeat:input_type -> shredstream.Heartbeat
	3, // 3: shredstream.ShredstreamProxy.SubscribeEntries:input_type -> shredstream.SubscribeEntriesRequest
	1, // 4: shredstream.Shredstream.SendHeartbeat:output_type -> shredstream.HeartbeatResponse
	4, // 5: shredstream.ShredstreamProxy.SubscribeEntries:output_type -> shredstream.Entry
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_shredstream_proto_init() }
func file_shredstream_proto_init() {
	if File_shredstream_proto != nil {
		return
	}
	file_shared_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shredstream_proto_rawDesc), len(file_shredstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_shredstream_proto_goTypes,
		DependencyIndexes: file_shredstream_proto_depIdxs,
		MessageInfos:      file_shredstream_proto_msgTypes,
	}.Build()
	File_shredstream_proto = out.File
	file_shredstream_proto_goTypes = nil
	file_shredstream_proto_depIdxs = nil
}
